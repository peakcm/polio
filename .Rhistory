sia_immunity_box_NIE
polis_pops %>%
filter(adm0_name == "NIGERIA") %>%
group_by(source, parentactivitycode) %>%
filter(start_date >= "2016-05-01") %>%
summarize(sum = sum(target_pop, na.rm=T)) %>%
ungroup() %>%
ggplot() +
geom_boxplot(aes(x = source, y = sum/1e6, color = source)) +
scale_y_log10(name = "SIA Target Population (Million)",
breaks = 10^(2-seq(1,5)),
minor_breaks = .5*10^(2-seq(1,5))) +
xlab("") +
theme_bw() +
guides(color="none")
# Boxplot of SIA size by vaccine type (For paper)
sia_target_box_NIE <- polis_pops %>%
filter(adm0_name == "NIGERIA") %>%
group_by(source, parentactivitycode) %>%
filter(start_date >= "2016-05-01") %>%
summarize(sum = sum(target_pop, na.rm=T)) %>%
ungroup() %>%
ggplot() +
geom_boxplot(aes(x = source, y = sum/1e6, color = source)) +
scale_y_log10(name = "SIA Target Population (Million)",
breaks = 10^(2-seq(1,5)),
minor_breaks = .5*10^(2-seq(1,5))) +
xlab("") +
theme_bw() +
guides(color="none")
sia_target_box
temp_DRC %>%
ggplot(aes(x = source, y = immunity_weighted, color = source)) +
# geom_violin() +
geom_boxplot() +
# geom_jitter(alpha = 0.5) +
theme_bw() +
guides(color = "none") +
ylab("Pre-Campaign Type-2 Immunity") +
xlab("")
data_sia_DRC <- data %>%
filter(adm0_name == "DEMOCRATIC REPUBLIC OF THE CONGO") %>%
group_by(parentactivitycode, period) %>%
reframe(target_pop_sum = sum(target_pop),
population_total_sum = sum(population_total),
immunity_weighted = weighted.mean(immunity_u5, target_pop, na.rm=T),
vaccinetype = unique(vaccinetype),
Region = unique(Region),
adm0_name = unique(adm0_name),
source = unique(source),
start_date = min(start_date),
quarter = unique(quarter),
week = unique(week))
sum(data_sia_DRC[data_sia_DRC$vaccinetype == "nOPV2", "target_pop_sum"], na.rm=T)
temp_DRC <- data_sia_DRC %>%
filter(is.na(immunity_weighted)==F) %>%
filter(start_date >= "2016-05-01")
temp_DRC %>%
group_by(source) %>%
summarize(min = min(immunity_weighted),
q1 = quantile(immunity_weighted, 0.25),
median = median(immunity_weighted),
mean = weighted.mean(immunity_weighted, target_pop_sum, na.rm=T),
q3 = quantile(immunity_weighted, 0.75),
max = max(immunity_weighted))
wilcox.test(temp_DRC$immunity_weighted ~ temp_DRC$source,
exact = FALSE)
sia_immunity_box_DRC <- temp_DRC %>%
ggplot(aes(x = source, y = immunity_weighted, color = source)) +
# geom_violin() +
geom_boxplot() +
# geom_jitter(alpha = 0.5) +
theme_bw() +
guides(color = "none") +
ylab("Pre-Campaign Type-2 Immunity") +
xlab("")
sia_immunity_box_DRC
data_sia <- data %>% group_by(parentactivitycode, period) %>%
reframe(target_pop_sum = sum(target_pop),
population_total_sum = sum(population_total),
immunity_weighted = weighted.mean(immunity_u5, target_pop, na.rm=T),
vaccinetype = unique(vaccinetype),
Region = unique(Region),
adm0_name = unique(adm0_name),
source = unique(source),
start_date = min(start_date),
quarter = unique(quarter),
week = unique(week))
sum(data_sia[data_sia$vaccinetype == "nOPV2", "target_pop_sum"], na.rm=T)
temp <- data_sia %>%
filter(is.na(immunity_weighted)==F) %>%
filter(Region %in% c("AFRO")) %>%
filter(start_date >= "2016-05-01")
temp %>%
group_by(source) %>%
summarize(min = min(immunity_weighted),
q1 = quantile(immunity_weighted, 0.25),
median = median(immunity_weighted),
mean = weighted.mean(immunity_weighted, target_pop_sum, na.rm=T),
q3 = quantile(immunity_weighted, 0.75),
max = max(immunity_weighted))
wilcox.test(temp$immunity_weighted ~ temp$source,
exact = FALSE)
# Immunity boxplot (for paper)
sia_immunity_box <- temp %>%
ggplot(aes(x = source, y = immunity_weighted, color = source)) +
# geom_violin() +
geom_boxplot() +
# geom_jitter(alpha = 0.5) +
theme_bw() +
guides(color = "none") +
ylab("Pre-Campaign Type-2 Immunity") +
xlab("")
sia_immunity_box
sia_immunity_box
sia_immunity_box_NIE
sia_immunity_box_DRC
sia_target_box
sia_target_box
data_sia <- data %>% group_by(parentactivitycode, period) %>%
reframe(target_pop_sum = sum(target_pop),
population_total_sum = sum(population_total),
immunity_weighted = weighted.mean(immunity_u5, target_pop, na.rm=T),
vaccinetype = unique(vaccinetype),
Region = unique(Region),
adm0_name = unique(adm0_name),
source = unique(source),
start_date = min(start_date),
quarter = unique(quarter),
week = unique(week))
sum(data_sia[data_sia$vaccinetype == "nOPV2", "target_pop_sum"], na.rm=T)
temp <- data_sia %>%
filter(is.na(immunity_weighted)==F) %>%
filter(Region %in% c("AFRO")) %>%
filter(start_date >= "2016-05-01")
temp %>%
group_by(source) %>%
summarize(min = min(immunity_weighted),
q1 = quantile(immunity_weighted, 0.25),
median = median(immunity_weighted),
mean = weighted.mean(immunity_weighted, target_pop_sum, na.rm=T),
q3 = quantile(immunity_weighted, 0.75),
max = max(immunity_weighted))
wilcox.test(temp$immunity_weighted ~ temp$source,
exact = FALSE)
# Immunity boxplot (for paper)
sia_immunity_box <- temp %>%
ggplot(aes(x = source, y = immunity_weighted, color = source)) +
# geom_violin() +
geom_boxplot() +
# geom_jitter(alpha = 0.5) +
theme_bw() +
guides(color = "none") +
ylab("Pre-Campaign Type-2 Immunity") +
xlab("")
sia_immunity_box
sia_target_box <- polis_pops %>%
group_by(source, parentactivitycode) %>%
# filter(region %in% c("AFRO", "EMRO", "EURO")) %>%
filter(region %in% c("AFRO")) %>%
filter(start_date >= "2016-05-01") %>%
summarize(sum = sum(target_pop, na.rm=T)) %>%
ungroup() %>%
ggplot() +
geom_boxplot(aes(x = source, y = sum/1e6, color = source)) +
scale_y_log10(name = "SIA Target Population (Million)",
breaks = 10^(2-seq(1,5)),
minor_breaks = .5*10^(2-seq(1,5))) +
xlab("") +
theme_bw() +
guides(color="none")
sia_target_box
#### Triple boxplot ####
plot_layout(sia_target_box + sia_immunity_box +
sia_target_box_NIE + sia_immunity_box_NIE +
sia_target_box_DRC + sia_immunity_box_DRC,
byrow = T)
sia_target_box_DRC
sia_immunity_box_DRC <- temp_DRC %>%
ggplot(aes(x = source, y = immunity_weighted, color = source)) +
# geom_violin() +
geom_boxplot() +
# geom_jitter(alpha = 0.5) +
theme_bw() +
guides(color = "none") +
ylab("Pre-Campaign Type-2 Immunity") +
xlab("")
sia_immunity_box_DRC
#### Triple boxplot ####
plot_layout(sia_target_box + sia_immunity_box +
sia_target_box_NIE + sia_immunity_box_NIE +
sia_target_box_DRC + sia_immunity_box_DRC,
byrow = T)
sia_target_box_DRC <- polis_pops %>%
filter(adm0_name == "DEMOCRATIC REPUBLIC OF THE CONGO") %>%
group_by(source, parentactivitycode) %>%
filter(start_date >= "2016-05-01") %>%
summarize(sum = sum(target_pop, na.rm=T)) %>%
ungroup() %>%
ggplot() +
geom_boxplot(aes(x = source, y = sum/1e6, color = source)) +
scale_y_log10(name = "SIA Target Population (Million)",
breaks = 10^(2-seq(1,5)),
minor_breaks = .5*10^(2-seq(1,5))) +
xlab("") +
theme_bw() +
guides(color="none")
sia_target_box_DRC
#### Triple boxplot ####
plot_layout(sia_target_box + sia_immunity_box +
sia_target_box_NIE + sia_immunity_box_NIE +
sia_target_box_DRC + sia_immunity_box_DRC,
byrow = T)
sia_target_box
sia_immunity_box
sia_target_box_NIE
sia_target_box_NIE <- polis_pops %>%
filter(adm0_name == "NIGERIA") %>%
group_by(source, parentactivitycode) %>%
filter(start_date >= "2016-05-01") %>%
summarize(sum = sum(target_pop, na.rm=T)) %>%
ungroup() %>%
ggplot() +
geom_boxplot(aes(x = source, y = sum/1e6, color = source)) +
scale_y_log10(name = "SIA Target Population (Million)",
breaks = 10^(2-seq(1,5)),
minor_breaks = .5*10^(2-seq(1,5))) +
xlab("") +
theme_bw() +
guides(color="none")
sia_target_box_NIE
#### Triple boxplot ####
plot_layout(sia_target_box + sia_immunity_box +
sia_target_box_NIE + sia_immunity_box_NIE +
sia_target_box_DRC + sia_immunity_box_DRC,
byrow = T)
#### Triple boxplot ####
plot_layout(sia_target_box + sia_immunity_box +
sia_target_box_NIE + sia_immunity_box_NIE +
sia_target_box_DRC + sia_immunity_box_DRC,
byrow = F)
#### Triple boxplot ####
plot_layout(sia_target_box + sia_immunity_box +
sia_target_box_NIE + sia_immunity_box_NIE +
sia_target_box_DRC + sia_immunity_box_DRC,
byrow = T)
#### Triple boxplot ####
plot_layout(ncol = 3, sia_target_box + sia_immunity_box +
sia_target_box_NIE + sia_immunity_box_NIE +
sia_target_box_DRC + sia_immunity_box_DRC,
byrow = T)
#### Triple boxplot ####
plot_layout(ncol = 3, nrow = 2, sia_target_box + sia_immunity_box +
sia_target_box_NIE + sia_immunity_box_NIE +
sia_target_box_DRC + sia_immunity_box_DRC,
byrow = T)
sia_target_box
sia_immunity_box
sia_target_box_NIE
sia_immunity_box_NIE
sia_target_box_DRC
sia_immunity_box_DRC
#### Triple boxplot ####
plot_layout(ncol = 3, nrow = 2, sia_target_box + sia_immunity_box +
sia_target_box_NIE + sia_immunity_box_NIE +
sia_target_box_DRC + sia_immunity_box_DRC,
byrow = T)
plot_layout(
sia_target_box + sia_immunity_box
,
byrow = T)
class(sia_target_box)
class(sia_immunity_box)
class(sia_target_box_NIE)
sia_target_box_NIE
sia_target_box
sia_immunity_box
sia_immunity_box_NIE
plot_layout(
sia_immunity_box +
sia_immunity_box_NIE
,
byrow = T)
library(PolisAPI)
library(lubridate)
library(tidyverse)
library(gganimate)
# Vector of emergence groups linked to nOPV2
n<-c("RDC-SKV-1", "RDC-TAN-2", "RDC-KOR-1",
"CAF-KEM-1", "NIE-KBS-1", "RDC-HKA-2",
"CAF-BNG-3", "BOT-FRA-1", "EGY-NOR-1",
"CAE-EXT-1", "ZIM-HRE-1", "NIE-KTS-1",
"MOZ-MAN-1", "RSS-WEQ-1", "ANG-LNO-3",
"ETH-TIG-1")
set_token("C:/Users/coreype/OneDrive - Bill & Melinda Gates Foundation/Documents/GitHub/polio-immunity-mapping/data_local/token.txt")
viruses_raw = get_polis_virus(min_date = '2014-01-01',virus_id = 4)
viruses_raw_save<-viruses_raw
viruses_raw$year<-year(viruses_raw$virus_date)
viruses_raw$half_year<-floor_date(as.Date(viruses_raw$virus_date),"6 months")
viruses_raw<-viruses_raw[viruses_raw$vdpv_classification_name=="Circulating"&!is.na(viruses_raw$vdpv_emergence_group_name),]
viruses_raw$origin<-as.Date(viruses_raw$virus_date)-30.5*as.numeric(viruses_raw$nt_changes)
viruses_raw$vacc<-ifelse(viruses_raw$vdpv_emergence_group_name%in%n,"nOPV2",'Sabin2')
a<-mutate(group_by(viruses_raw[order(viruses_raw$virus_date),],vdpv_emergence_group_name,vacc),rank=1:n())%>%filter(rank<4)%>%summarise(origin=mean(origin,na.rm=T))
a$year<-year(a$origin)
a$half_year<-floor_date(as.Date(a$origin),"6 months")
full <- "C:/Users/coreype/OneDrive - Bill & Melinda Gates Foundation/Documents/GitHub"
path_to_polis_data<-"/polio-immunity-mapping/results"
sia<-read.csv(paste0(full, path_to_polis_data,"/sia_district_rows_raw.csv"))
library(PolisAPI)
library(lubridate)
library(tidyverse)
library(gganimate)
# Vector of emergence groups linked to nOPV2
n<-c("RDC-SKV-1", "RDC-TAN-2", "RDC-KOR-1",
"CAF-KEM-1", "NIE-KBS-1", "RDC-HKA-2",
"CAF-BNG-3", "BOT-FRA-1", "EGY-NOR-1",
"CAE-EXT-1", "ZIM-HRE-1", "NIE-KTS-1",
"MOZ-MAN-1", "RSS-WEQ-1")
set_token("C:/Users/coreype/OneDrive - Bill & Melinda Gates Foundation/Documents/GitHub/polio-immunity-mapping/data_local/token.txt")
viruses_raw = get_polis_virus(min_date = '2014-01-01',virus_id = 4)
viruses_raw_save<-viruses_raw
viruses_raw$year<-year(viruses_raw$virus_date)
viruses_raw$half_year<-floor_date(as.Date(viruses_raw$virus_date),"6 months")
viruses_raw<-viruses_raw[viruses_raw$vdpv_classification_name=="Circulating"&!is.na(viruses_raw$vdpv_emergence_group_name),]
viruses_raw$origin<-as.Date(viruses_raw$virus_date)-30.5*as.numeric(viruses_raw$nt_changes)
viruses_raw$vacc<-ifelse(viruses_raw$vdpv_emergence_group_name%in%n,"nOPV2",'Sabin2')
a<-mutate(group_by(viruses_raw[order(viruses_raw$virus_date),],vdpv_emergence_group_name,vacc),rank=1:n())%>%filter(rank<4)%>%summarise(origin=mean(origin,na.rm=T))
a$year<-year(a$origin)
a$half_year<-floor_date(as.Date(a$origin),"6 months")
full <- "C:/Users/coreype/OneDrive - Bill & Melinda Gates Foundation/Documents/GitHub"
path_to_polis_data<-"/polio-immunity-mapping/results"
sia<-read.csv(paste0(full, path_to_polis_data,"/sia_district_rows_raw.csv"))
sia<-sia[sia$VaccineType%in%c("mOPV2","nOPV2","tOPV")&sia$Status%in%c("Done"),]
summary(sia$CalculatedDosages)
summary(sia[is.na(sia$CalculatedDosages),])
sia$dose<-sia$CalculatedDosages
sia$dose[is.na(sia$CalculatedDosages)]<-(sia$CalculatedTargetPopulation*sia$WastageFactor)[is.na(sia$CalculatedDosages)]
x<-unique(sia[,c("VaccineType","ParentActivityCode","ParentPlannedDateFrom","dose")])
x$date<-as.Date(x$ParentPlannedDateFrom,"%d/%m/%Y")
x$date[is.na(x$date)]<-as.Date(paste0("01/",x$ParentPlannedDateFrom[is.na(x$date)]),"%d/%b/%Y")
x<-x[x$date>=as.Date("2016-05-01"),]
x$year<-format(x$date,"%Y")
x$half_year<-floor_date(x$date,"6 months")
x<-summarise(group_by(x[x$half_year>as.Date("2016-01-01"),],half_year,VaccineType),n=sum(dose))
summarise(group_by(as_tibble(viruses_raw),vdpv_emergence_group_name,vacc),half_year=min(half_year))%>%filter(half_year==as.Date("2023-01-01"))
# exc<-c("NIE-KTS-1","MOZ-NPL-2", "RSS-WEQ-1")
exc <- c("")
y<-summarise(group_by(summarise(group_by(as_tibble(viruses_raw%>%filter(!vdpv_emergence_group_name%in%exc)),vdpv_emergence_group_name,vacc),half_year=min(half_year)),half_year,vacc),new_emerg=n())
y<-merge(cbind.data.frame(vacc="nOPV2",half_year=unique(viruses_raw$half_year[viruses_raw$half_year>=as.Date("2021-01-01")])),y,all=T)
y$y<-y$new_emerg
y$y[is.na(y$y)]<-0
y<-y[y$half_year>as.Date("2016-01-01"),]
p<-ggplot()+geom_col(data=x,aes(x=half_year+365/4,y=n/1e6,fill=VaccineType=="nOPV2"))+
geom_point(data=y,aes(x=half_year+365/4,y=12*y,color=vacc))+
geom_line(data=y,aes(x=half_year+365/4,y=12*y,group=vacc),color = "black", linewidth = 2.5)+
geom_line(data=y,aes(x=half_year+365/4,y=12*y,color=vacc), linewidth = 2)+
# geom_label(data=y,aes(x=half_year+365/4,y=12*(y+ifelse(half_year=="2023-01-01",ifelse(vacc=="nOPV2",-1,0.9),0.9)),label=y,color=vacc),size=2)+
geom_label(data=y,aes(x=half_year+365/4,y=12*(y+0.9),label=y),color = "black", size=2)+
labs(x="",y="Estimated doses (millions)",linetype="",fill="Doses",color="Linked to",caption="*Data as of 12 Apr 2024.")+
theme(legend.position=c(0.1,0.68))+scale_x_date(date_breaks="year",date_labels="%b %y")+
scale_fill_manual(labels=c("Sabin2", "nOPV2"),values=c("#00BFC4","#F8766D"))+
scale_color_manual(values=c("#F8766D","#00BFC4"))+
# scale_linetype_manual(values=c(1,2))+
scale_y_continuous(sec.axis=sec_axis(trans=~./12,name="New emergences (date of detection)"))
p
ggsave("figures/nopv2_new_emergence_plot_alt.png",p,width=6,height=4)
full <- "C:/Users/coreype/OneDrive - Bill & Melinda Gates Foundation/Documents/GitHub"
path_to_polis_data<-"/polio-immunity-mapping/results"
afp<-read.csv(paste0(full, path_to_polis_data,"/linelist_afp.csv"))
es<-read.csv(paste0(full, path_to_polis_data,"/linelist_es.csv"))
sia<-read.csv(paste0(full, path_to_polis_data,"/sia_district_rows.csv"))
afp$type<-"AFP"
es$type<-"ES"
library(tidyverse)
virus<-bind_rows(afp,es)
virus<-virus[!is.na(virus$vdpv_emergence_group)&virus$vdpv_emergence_group!="",]
virus$date<-as.Date(ifelse(is.na(virus$case_date),virus$collection_date,virus$case_date))
a<-virus[!grepl(",",virus$vdpv_emergence_group),]
b<-virus[grepl(",",virus$vdpv_emergence_group),]
b<-lapply(1:nrow(b),function(e){merge(b[e,which(names(b)!="vdpv_emergence_group")],cbind.data.frame(vdpv_emergence_group=strsplit(b$vdpv_emergence_group[e],", ")[[1]]))})
b<-do.call("rbind",b)
virus<-rbind(a,b)
unique(virus$vdpv_emergence_group)
unique(virus$vdpv_emergence_group) %>% sort()
virus<-filter(virus,!iso3_code%in%c("AFG","PAK"),grepl("cVDPV2",polio_virus_types),vdpv_emergence_group!="cVDPV2")
virus<-virus[order(virus$date),]
virus<-mutate(group_by(as_tibble(virus),vdpv_emergence_group),start=min(date),end=max(date),n=n())
key<-summarise(group_by(as_tibble(virus),vdpv_emergence_group),iso3=unique(iso3_code[which(date==start)]))
key$iso3[key$vdpv_emergence_group=="SOM-AWL-1"]<-"SOM"
virus$grp<-paste(virus$vdpv_emergence_group,virus$iso3_code)
sub<-virus[virus$grp%in%(summarise(group_by(as_tibble(virus),grp, vdpv_emergence_group),date=min(date))%>%filter(date>as.Date("2010-01-01")))$grp,]
summ<-summarise(group_by(as_tibble(sub),grp,adm0_name, vdpv_emergence_group),start=min(date),end=max(date))
sub<-mutate(group_by(as_tibble(sub),grp),n=n())
sia_sub<-unique(sia[which(sia$ADM0_NAME%in%sub$adm0_name&sia$start_date>as.Date("2010-01-01")&sia$status!="Planned"&sia$vaccinetype%in%c("mOPV2",'nOPV2',"tOPV")),c("start_date","ADM0_NAME","vaccinetype", "parentactivitycode")])
sia_sub<-merge(sia_sub,summ,by.x="ADM0_NAME",by.y="adm0_name",all=T)
sia_sub<-sia_sub[which(as.Date(sia_sub$start_date)>=sia_sub$start&as.Date(sia_sub$start_date)<=(sia_sub$end+6*30)),]
sub<-merge(sub,key)
sub$country_of_origin<-ifelse(sub$iso3==sub$iso3_code,"Inside country of origin","Outside country of origin")
sia_sub<-merge(sia_sub,unique(sub[,c("country_of_origin","grp")]),all.x=T)
df<-summarise(group_by(as_tibble(sub),grp,country_of_origin, vdpv_emergence_group),start=min(date),end=max(date))
df$grp<-factor(df$grp,levels=df$grp[order(df$start)],ordered=T)
sub$grp<-factor(sub$grp,levels=df$grp[order(df$start)],ordered=T)
sia_sub$grp<-factor(sia_sub$grp,levels=df$grp[order(df$start)],ordered=T)
rect<-merge(cbind.data.frame(xmin=Sys.Date()-6*30,xmax=Sys.Date(),ymin=-Inf,ymax=Inf),cbind.data.frame(country_of_origin=unique(df$country_of_origin)),all=T)
p<-ggplot()+
geom_rect(data=rect,aes(xmin=xmin,xmax=xmax,ymin=ymin,ymax=ymax),fill="gray")+
geom_segment(data=df,aes(x=start,xend=end,y=grp,yend=grp), size = 1.5)+
geom_point(data=sub,aes(x=date,y=grp), size = 1)+
geom_text(data=sia_sub,aes(x=as.Date(start_date),y=grp,label="|",color=vaccinetype))+
theme(legend.position=c(0.1,0.9))+
labs(x="Date",y="Country-lineage outbreak",color="SIA")+facet_wrap(~country_of_origin,scales="free_y")
p
#DRC only
sub<-virus[virus$grp%in%(summarise(group_by(as_tibble(virus),grp, vdpv_emergence_group),date=min(date))%>%filter(date>as.Date("2010-01-01")))$grp,]%>%filter(adm0_name == "DEMOCRATIC REPUBLIC OF THE CONGO")
summ<-summarise(group_by(as_tibble(sub),grp,adm0_name, vdpv_emergence_group),start=min(date),end=max(date))
sub<-mutate(group_by(as_tibble(sub),grp),n=n())
sia_sub<-unique(sia[which(sia$ADM0_NAME%in%sub$adm0_name&sia$start_date>as.Date("2010-01-01")&sia$status!="Planned"&sia$vaccinetype%in%c("mOPV2",'nOPV2',"tOPV")),c("start_date","ADM0_NAME","vaccinetype", "parentactivitycode")])
sia_sub<-merge(sia_sub,summ,by.x="ADM0_NAME",by.y="adm0_name",all=T)
sia_sub<-sia_sub[which(as.Date(sia_sub$start_date)>=sia_sub$start&as.Date(sia_sub$start_date)<=(sia_sub$end+6*30)),]
sub<-merge(sub,key)
sub$country_of_origin<-ifelse(sub$iso3==sub$iso3_code,"Inside country of origin","Outside country of origin")
sia_sub<-merge(sia_sub,unique(sub[,c("country_of_origin","grp")]),all.x=T)
df<-summarise(group_by(as_tibble(sub),grp,country_of_origin, vdpv_emergence_group),start=min(date),end=max(date))
df$grp<-factor(df$grp,levels=df$grp[order(df$start)],ordered=T)
sub$grp<-factor(sub$grp,levels=df$grp[order(df$start)],ordered=T)
sia_sub$grp<-factor(sia_sub$grp,levels=df$grp[order(df$start)],ordered=T)
ggplot()+
# geom_rect(data=rect,aes(xmin=xmin,xmax=xmax,ymin=ymin,ymax=ymax),fill="gray")+
geom_segment(data=df,aes(x=start,xend=end,y=grp,yend=grp), linewidth = 1.5)+
geom_point(data=sub,aes(x=date,y=grp), size = 1)+
geom_text(data=sia_sub,aes(x=as.Date(start_date),y=grp,label="|",color=vaccinetype))+
theme(legend.position=c(0.1,0.9))+
labs(x="Date",y="Emergence Group",color="SIA", title="DRC") +
scale_y_discrete(labels = function(y) gsub(" COD", "", y))
View(df)
14/74
full <- "C:/Users/coreype/OneDrive - Bill & Melinda Gates Foundation/Documents/GitHub"
full <- "C:/Users/coreype/OneDrive - Bill & Melinda Gates Foundation/Documents/GitHub"
path_to_polis_data<-"/polio-immunity-mapping/results"
afp<-read.csv(paste0(full, path_to_polis_data,"/linelist_afp.csv"))
es<-read.csv(paste0(full, path_to_polis_data,"/linelist_es.csv"))
sia<-read.csv(paste0(full, path_to_polis_data,"/sia_district_rows.csv"))
afp$type<-"AFP"
es$type<-"ES"
library(tidyverse)
virus<-bind_rows(afp,es)
virus<-virus[!is.na(virus$vdpv_emergence_group)&virus$vdpv_emergence_group!="",]
virus$date<-as.Date(ifelse(is.na(virus$case_date),virus$collection_date,virus$case_date))
a<-virus[!grepl(",",virus$vdpv_emergence_group),]
b<-virus[grepl(",",virus$vdpv_emergence_group),]
b<-lapply(1:nrow(b),function(e){merge(b[e,which(names(b)!="vdpv_emergence_group")],cbind.data.frame(vdpv_emergence_group=strsplit(b$vdpv_emergence_group[e],", ")[[1]]))})
b<-do.call("rbind",b)
virus<-rbind(a,b)
unique(virus$vdpv_emergence_group) %>% sort()
virus<-filter(virus,!iso3_code%in%c("AFG","PAK"),grepl("cVDPV2",polio_virus_types),vdpv_emergence_group!="cVDPV2")
virus<-virus[order(virus$date),]
virus<-mutate(group_by(as_tibble(virus),vdpv_emergence_group),start=min(date),end=max(date),n=n())
key<-summarise(group_by(as_tibble(virus),vdpv_emergence_group),iso3=unique(iso3_code[which(date==start)]))
key$iso3[key$vdpv_emergence_group=="SOM-AWL-1"]<-"SOM"
virus$grp<-paste(virus$vdpv_emergence_group,virus$iso3_code)
sub<-virus[virus$grp%in%(summarise(group_by(as_tibble(virus),grp, vdpv_emergence_group),date=min(date))%>%filter(date>as.Date("2010-01-01")))$grp,]
summ<-summarise(group_by(as_tibble(sub),grp,adm0_name, vdpv_emergence_group),start=min(date),end=max(date))
sub<-mutate(group_by(as_tibble(sub),grp),n=n())
sia_sub<-unique(sia[which(sia$ADM0_NAME%in%sub$adm0_name&sia$start_date>as.Date("2010-01-01")&sia$status!="Planned"&sia$vaccinetype%in%c("mOPV2",'nOPV2',"tOPV")),c("start_date","ADM0_NAME","vaccinetype", "parentactivitycode")])
sia_sub<-merge(sia_sub,summ,by.x="ADM0_NAME",by.y="adm0_name",all=T)
sia_sub<-sia_sub[which(as.Date(sia_sub$start_date)>=sia_sub$start&as.Date(sia_sub$start_date)<=(sia_sub$end+6*30)),]
sub<-merge(sub,key)
sub$country_of_origin<-ifelse(sub$iso3==sub$iso3_code,"Inside country of origin","Outside country of origin")
sia_sub<-merge(sia_sub,unique(sub[,c("country_of_origin","grp")]),all.x=T)
df<-summarise(group_by(as_tibble(sub),grp,country_of_origin, vdpv_emergence_group),start=min(date),end=max(date))
df$grp<-factor(df$grp,levels=df$grp[order(df$start)],ordered=T)
sub$grp<-factor(sub$grp,levels=df$grp[order(df$start)],ordered=T)
sia_sub$grp<-factor(sia_sub$grp,levels=df$grp[order(df$start)],ordered=T)
rect<-merge(cbind.data.frame(xmin=Sys.Date()-6*30,xmax=Sys.Date(),ymin=-Inf,ymax=Inf),cbind.data.frame(country_of_origin=unique(df$country_of_origin)),all=T)
p<-ggplot()+
geom_rect(data=rect,aes(xmin=xmin,xmax=xmax,ymin=ymin,ymax=ymax),fill="gray")+
geom_segment(data=df,aes(x=start,xend=end,y=grp,yend=grp), size = 1.5)+
geom_point(data=sub,aes(x=date,y=grp), size = 1)+
geom_text(data=sia_sub,aes(x=as.Date(start_date),y=grp,label="|",color=vaccinetype))+
theme(legend.position=c(0.1,0.9))+
labs(x="Date",y="Country-lineage outbreak",color="SIA")+facet_wrap(~country_of_origin,scales="free_y")
#DRC only
sub<-virus[virus$grp%in%(summarise(group_by(as_tibble(virus),grp, vdpv_emergence_group),date=min(date))%>%filter(date>as.Date("2010-01-01")))$grp,]%>%filter(adm0_name == "DEMOCRATIC REPUBLIC OF THE CONGO")
summ<-summarise(group_by(as_tibble(sub),grp,adm0_name, vdpv_emergence_group),start=min(date),end=max(date))
sub<-mutate(group_by(as_tibble(sub),grp),n=n())
sia_sub<-unique(sia[which(sia$ADM0_NAME%in%sub$adm0_name&sia$start_date>as.Date("2010-01-01")&sia$status!="Planned"&sia$vaccinetype%in%c("mOPV2",'nOPV2',"tOPV")),c("start_date","ADM0_NAME","vaccinetype", "parentactivitycode")])
sia_sub<-merge(sia_sub,summ,by.x="ADM0_NAME",by.y="adm0_name",all=T)
sia_sub<-sia_sub[which(as.Date(sia_sub$start_date)>=sia_sub$start&as.Date(sia_sub$start_date)<=(sia_sub$end+6*30)),]
sub<-merge(sub,key)
sub$country_of_origin<-ifelse(sub$iso3==sub$iso3_code,"Inside country of origin","Outside country of origin")
sia_sub<-merge(sia_sub,unique(sub[,c("country_of_origin","grp")]),all.x=T)
df<-summarise(group_by(as_tibble(sub),grp,country_of_origin, vdpv_emergence_group),start=min(date),end=max(date))
df$grp<-factor(df$grp,levels=df$grp[order(df$start)],ordered=T)
sub$grp<-factor(sub$grp,levels=df$grp[order(df$start)],ordered=T)
sia_sub$grp<-factor(sia_sub$grp,levels=df$grp[order(df$start)],ordered=T)
ggplot()+
# geom_rect(data=rect,aes(xmin=xmin,xmax=xmax,ymin=ymin,ymax=ymax),fill="gray")+
geom_segment(data=df,aes(x=start,xend=end,y=grp,yend=grp), linewidth = 1.5)+
geom_point(data=sub,aes(x=date,y=grp), size = 1)+
geom_text(data=sia_sub,aes(x=as.Date(start_date),y=grp,label="|",color=vaccinetype))+
theme(legend.position=c(0.1,0.9))+
labs(x="Date",y="Emergence Group",color="SIA", title="DRC") +
scale_y_discrete(labels = function(y) gsub(" COD", "", y))
packages = c('tidyverse', 'lubridate', 'zoo', 'janitor', 'Rcpp')
for(i in packages){
if(!require(i, character.only = T)){
install.packages(i)
library(i, character.only = T)
}
}
source("R/pipeline/load_args.R")
args <- load_args()
