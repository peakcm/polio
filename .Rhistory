cor.test(temp$interval, temp$emergence_prob, method = "spearman")
sias_provinces %>%
mutate(adm0_group_new = case_when(adm0_name == "NIGERIA" ~ "Nigeria",
adm0_name == "DEMOCRATIC REPUBLIC OF THE CONGO" ~ "DRC",
adm0_group %in% c("Others - AFRO", "CAR", "ETHIOPIA", "Others - non AFRO") ~ "Others")) %>%
filter(round_2 == TRUE,
emerge_data == TRUE) %>%
group_by(emerge_data_sia) %>%
summarize(emerge_data_sia = unique(emerge_data_sia),
emergence_prob = unique(emergence_prob),
interval = unique(interval),
adm0_group_new = unique(adm0_group_new)) %>%
group_by(adm0_group_new) %>%
summarize(cor(interval, emergence_prob, method = "spearman"))
#### Save workspace locally ####
save(file = “VDPV2n_analyses.RData”)
#### Save workspace locally ####
save(file = "VDPV2n_analyses.RData")
#### Save workspace locally ####
save.image(file = "VDPV2n_analyses.RData")
expand_grid(free = c(0,2),t = c(68, 152)/365) %>%
mutate(lower = qpois(0.025,free + 9*t), upper = qpois(0.975,free + 9*t))
expand_grid(count = c(43, 66)) %>%
mutate(lower = qpois(0.025,count), upper = qpois(0.975,count))
sias_provinces %>%
mutate(adm0_group_new = case_when(adm0_name == "NIGERIA" ~ "Nigeria",
adm0_name == "DEMOCRATIC REPUBLIC OF THE CONGO" ~ "DRC",
adm0_group %in% c("Others - AFRO", "CAR", "ETHIOPIA", "Others - non AFRO") ~ "Others")) %>%
filter(round_2 == TRUE,
emerge_data == TRUE) %>%
group_by(emerge_data_sia) %>%
summarize(emerge_data_sia = unique(emerge_data_sia),
emergence_prob = unique(emergence_prob),
interval = unique(interval),
adm0_group_new = unique(adm0_group_new)) %>%
group_by(adm0_group_new) %>%
summarize(cor(interval, emergence_prob, method = "spearman"))
# Plot distribution of interval to R2 over time and by geo and by vaccinetype
sias_provinces %>% filter(round_2 == TRUE,
emerge_data == TRUE) %>%
mutate(adm0_group_new = case_when(adm0_name == "NIGERIA" ~ "Nigeria",
adm0_name == "DEMOCRATIC REPUBLIC OF THE CONGO" ~ "DRC",
adm0_group %in% c("Others - AFRO", "CAR", "ETHIOPIA", "Others - non AFRO") ~ "Others")) %>%
group_by(emerge_data_sia) %>%
summarize(emerge_data_sia = unique(emerge_data_sia),
emergence_prob = unique(emergence_prob),
interval = unique(interval),
adm0_group_new = unique(adm0_group_new)) %>%
ggplot(aes(x = interval/7, y = emergence_prob)) +
geom_point(size = 2) +
geom_smooth(method = "lm") +
facet_wrap(adm0_group_new~., scales = "free") +
ggtitle("Longer R1-to-R2 intervals correlated with higher probability of seeding") +
labs(subtitle = "Sabin-2 campaigns 2016-2019",
caption = "Emergence probability estimates provided by Gray et al 2023") +
scale_x_continuous(name = "Weeks between R1 and R2", limits = c(0,NA)) +
scale_y_continuous(name = "Cumulative emergence probability by campaign")
# Plot distribution of interval to R2 over time and by geo and by vaccinetype
sias_provinces %>% filter(round_2 == TRUE,
emerge_data == TRUE) %>%
mutate(adm0_group_new = case_when(adm0_name == "NIGERIA" ~ "Nigeria",
adm0_name == "DEMOCRATIC REPUBLIC OF THE CONGO" ~ "DRC",
adm0_group %in% c("Others - AFRO", "CAR", "ETHIOPIA", "Others - non AFRO") ~ "Others")) %>%
group_by(emerge_data_sia) %>%
summarize(emerge_data_sia = unique(emerge_data_sia),
emergence_prob = unique(emergence_prob),
interval = unique(interval),
adm0_group_new = unique(adm0_group_new)) %>%
ggplot(aes(x = interval/7, y = emergence_prob)) +
geom_point(size = 2) +
geom_smooth(method = "lm") +
facet_wrap(adm0_group_new~.) +
ggtitle("Longer R1-to-R2 intervals correlated with higher probability of seeding") +
labs(subtitle = "Sabin-2 campaigns 2016-2019",
caption = "Emergence probability estimates provided by Gray et al 2023") +
scale_x_continuous(name = "Weeks between R1 and R2", limits = c(0,NA)) +
scale_y_continuous(name = "Cumulative emergence probability by campaign")
# Plot distribution of interval to R2 over time and by geo and by vaccinetype
sias_provinces %>% filter(round_2 == TRUE,
emerge_data == TRUE) %>%
mutate(adm0_group_new = case_when(adm0_name == "NIGERIA" ~ "Nigeria",
adm0_name == "DEMOCRATIC REPUBLIC OF THE CONGO" ~ "DRC",
adm0_group %in% c("Others - AFRO", "CAR", "ETHIOPIA", "Others - non AFRO") ~ "Others")) %>%
group_by(emerge_data_sia) %>%
summarize(emerge_data_sia = unique(emerge_data_sia),
emergence_prob = unique(emergence_prob),
interval = unique(interval),
adm0_group_new = unique(adm0_group_new)) %>%
ggplot(aes(x = interval/7, y = emergence_prob)) +
geom_point(size = 2) +
geom_smooth(method = "lm") +
facet_wrap(.~adm0_group_new) +
ggtitle("Longer R1-to-R2 intervals correlated with higher probability of seeding") +
labs(subtitle = "Sabin-2 campaigns 2016-2019",
caption = "Emergence probability estimates provided by Gray et al 2023") +
scale_x_continuous(name = "Weeks between R1 and R2", limits = c(0,NA)) +
scale_y_continuous(name = "Cumulative emergence probability by campaign")
# Plot distribution of interval to R2 over time and by geo and by vaccinetype
sias_provinces %>% filter(round_2 == TRUE,
emerge_data == TRUE) %>%
mutate(adm0_group_new = case_when(adm0_name == "NIGERIA" ~ "Nigeria",
adm0_name == "DEMOCRATIC REPUBLIC OF THE CONGO" ~ "DRC",
adm0_group %in% c("Others - AFRO", "CAR", "ETHIOPIA", "Others - non AFRO") ~ "Others")) %>%
group_by(emerge_data_sia) %>%
summarize(emerge_data_sia = unique(emerge_data_sia),
emergence_prob = unique(emergence_prob),
interval = unique(interval),
adm0_group_new = unique(adm0_group_new)) %>%
ggplot(aes(x = interval/7, y = emergence_prob)) +
geom_point(size = 2) +
geom_smooth(method = "lm") +
facet_wrap(adm0_group_new~.) +
ggtitle("Longer R1-to-R2 intervals correlated with higher probability of seeding") +
labs(subtitle = "Sabin-2 campaigns 2016-2019",
caption = "Emergence probability estimates provided by Gray et al 2023") +
scale_x_continuous(name = "Weeks between R1 and R2", limits = c(0,NA)) +
scale_y_continuous(name = "Cumulative emergence probability by campaign")
# Plot distribution of interval to R2 over time and by geo and by vaccinetype
sias_provinces %>% filter(round_2 == TRUE,
emerge_data == TRUE) %>%
mutate(adm0_group_new = case_when(adm0_name == "NIGERIA" ~ "Nigeria",
adm0_name == "DEMOCRATIC REPUBLIC OF THE CONGO" ~ "DRC",
adm0_group %in% c("Others - AFRO", "CAR", "ETHIOPIA", "Others - non AFRO") ~ "Others")) %>%
group_by(emerge_data_sia) %>%
summarize(emerge_data_sia = unique(emerge_data_sia),
emergence_prob = unique(emergence_prob),
interval = unique(interval),
adm0_group_new = unique(adm0_group_new)) %>%
ggplot(aes(x = interval/7, y = emergence_prob)) +
geom_point(size = 2) +
geom_smooth(method = "lm") +
facet_wrap(adm0_group_new) +
ggtitle("Longer R1-to-R2 intervals correlated with higher probability of seeding") +
labs(subtitle = "Sabin-2 campaigns 2016-2019",
caption = "Emergence probability estimates provided by Gray et al 2023") +
scale_x_continuous(name = "Weeks between R1 and R2", limits = c(0,NA)) +
scale_y_continuous(name = "Cumulative emergence probability by campaign")
# Plot distribution of interval to R2 over time and by geo and by vaccinetype
sias_provinces %>% filter(round_2 == TRUE,
emerge_data == TRUE) %>%
mutate(adm0_group_new = case_when(adm0_name == "NIGERIA" ~ "Nigeria",
adm0_name == "DEMOCRATIC REPUBLIC OF THE CONGO" ~ "DRC",
adm0_group %in% c("Others - AFRO", "CAR", "ETHIOPIA", "Others - non AFRO") ~ "Others")) %>%
group_by(emerge_data_sia) %>%
summarize(emerge_data_sia = unique(emerge_data_sia),
emergence_prob = unique(emergence_prob),
interval = unique(interval),
adm0_group_new = unique(adm0_group_new)) %>%
ggplot(aes(x = interval/7, y = emergence_prob)) +
geom_point(size = 2) +
geom_smooth(method = "lm") +
facet_wrap(.~adm0_group_new) +
ggtitle("Longer R1-to-R2 intervals correlated with higher probability of seeding") +
labs(subtitle = "Sabin-2 campaigns 2016-2019",
caption = "Emergence probability estimates provided by Gray et al 2023") +
scale_x_continuous(name = "Weeks between R1 and R2", limits = c(0,NA)) +
scale_y_continuous(name = "Cumulative emergence probability by campaign")
# Plot distribution of interval to R2 over time and by geo and by vaccinetype
sias_provinces %>% filter(round_2 == TRUE,
emerge_data == TRUE) %>%
mutate(adm0_group_new = case_when(adm0_name == "NIGERIA" ~ "Nigeria",
adm0_name == "DEMOCRATIC REPUBLIC OF THE CONGO" ~ "DRC",
adm0_group %in% c("Others - AFRO", "CAR", "ETHIOPIA", "Others - non AFRO") ~ "Others")) %>%
group_by(emerge_data_sia) %>%
summarize(emerge_data_sia = unique(emerge_data_sia),
emergence_prob = unique(emergence_prob),
interval = unique(interval),
adm0_group_new = unique(adm0_group_new)) %>%
ggplot(aes(x = interval/7, y = emergence_prob)) +
geom_point(size = 2) +
geom_smooth(method = "lm") +
facet_grid(rows =adm0_group_new) +
ggtitle("Longer R1-to-R2 intervals correlated with higher probability of seeding") +
labs(subtitle = "Sabin-2 campaigns 2016-2019",
caption = "Emergence probability estimates provided by Gray et al 2023") +
scale_x_continuous(name = "Weeks between R1 and R2", limits = c(0,NA)) +
scale_y_continuous(name = "Cumulative emergence probability by campaign")
# Plot distribution of interval to R2 over time and by geo and by vaccinetype
sias_provinces %>% filter(round_2 == TRUE,
emerge_data == TRUE) %>%
mutate(adm0_group_new = case_when(adm0_name == "NIGERIA" ~ "Nigeria",
adm0_name == "DEMOCRATIC REPUBLIC OF THE CONGO" ~ "DRC",
adm0_group %in% c("Others - AFRO", "CAR", "ETHIOPIA", "Others - non AFRO") ~ "Others")) %>%
group_by(emerge_data_sia) %>%
summarize(emerge_data_sia = unique(emerge_data_sia),
emergence_prob = unique(emergence_prob),
interval = unique(interval),
adm0_group_new = unique(adm0_group_new)) %>%
ggplot(aes(x = interval/7, y = emergence_prob)) +
geom_point(size = 2) +
geom_smooth(method = "lm") +
facet_grid(rows =adm0_group_new) +
ggtitle("Longer R1-to-R2 intervals correlated with higher probability of seeding") +
labs(subtitle = "Sabin-2 campaigns 2016-2019",
caption = "Emergence probability estimates provided by Gray et al 2023") +
scale_x_continuous(name = "Weeks between R1 and R2", limits = c(0,NA)) +
scale_y_continuous(name = "Cumulative emergence probability by campaign")
# Plot distribution of interval to R2 over time and by geo and by vaccinetype
sias_provinces %>% filter(round_2 == TRUE,
emerge_data == TRUE) %>%
mutate(adm0_group_new = case_when(adm0_name == "NIGERIA" ~ "Nigeria",
adm0_name == "DEMOCRATIC REPUBLIC OF THE CONGO" ~ "DRC",
adm0_group %in% c("Others - AFRO", "CAR", "ETHIOPIA", "Others - non AFRO") ~ "Others")) %>%
group_by(emerge_data_sia) %>%
summarize(emerge_data_sia = unique(emerge_data_sia),
emergence_prob = unique(emergence_prob),
interval = unique(interval),
adm0_group_new = unique(adm0_group_new)) %>%
ggplot(aes(x = interval/7, y = emergence_prob)) +
geom_point(size = 2) +
geom_smooth(method = "lm") +
facet_grid(rows =adm0_group_new) +
ggtitle("Longer R1-to-R2 intervals correlated with higher probability of seeding") +
labs(subtitle = "Sabin-2 campaigns 2016-2019",
caption = "Emergence probability estimates provided by Gray et al 2023") +
scale_x_continuous(name = "Weeks between R1 and R2", limits = c(0,NA)) +
scale_y_continuous(name = "Cumulative emergence probability by campaign")
# Plot distribution of interval to R2 over time and by geo and by vaccinetype
sias_provinces %>% filter(round_2 == TRUE,
emerge_data == TRUE) %>%
mutate(adm0_group_new = case_when(adm0_name == "NIGERIA" ~ "Nigeria",
adm0_name == "DEMOCRATIC REPUBLIC OF THE CONGO" ~ "DRC",
adm0_group %in% c("Others - AFRO", "CAR", "ETHIOPIA", "Others - non AFRO") ~ "Others")) %>%
group_by(emerge_data_sia) %>%
summarize(emerge_data_sia = unique(emerge_data_sia),
emergence_prob = unique(emergence_prob),
interval = unique(interval),
adm0_group_new = unique(adm0_group_new)) %>%
ggplot(aes(x = interval/7, y = emergence_prob)) +
geom_point(size = 2) +
geom_smooth(method = "lm") +
facet_grid(rows ="adm0_group_new") +
ggtitle("Longer R1-to-R2 intervals correlated with higher probability of seeding") +
labs(subtitle = "Sabin-2 campaigns 2016-2019",
caption = "Emergence probability estimates provided by Gray et al 2023") +
scale_x_continuous(name = "Weeks between R1 and R2", limits = c(0,NA)) +
scale_y_continuous(name = "Cumulative emergence probability by campaign")
# Plot distribution of interval to R2 over time and by geo and by vaccinetype
sias_provinces %>% filter(round_2 == TRUE,
emerge_data == TRUE) %>%
mutate(adm0_group_new = case_when(adm0_name == "NIGERIA" ~ "Nigeria",
adm0_name == "DEMOCRATIC REPUBLIC OF THE CONGO" ~ "DRC",
adm0_group %in% c("Others - AFRO", "CAR", "ETHIOPIA", "Others - non AFRO") ~ "Others")) %>%
group_by(emerge_data_sia) %>%
summarize(emerge_data_sia = unique(emerge_data_sia),
emergence_prob = unique(emergence_prob),
interval = unique(interval),
adm0_group_new = unique(adm0_group_new)) %>%
ggplot(aes(x = interval/7, y = emergence_prob)) +
geom_point(size = 2) +
geom_smooth(method = "lm") +
facet_grid(cols ="adm0_group_new") +
ggtitle("Longer R1-to-R2 intervals correlated with higher probability of seeding") +
labs(subtitle = "Sabin-2 campaigns 2016-2019",
caption = "Emergence probability estimates provided by Gray et al 2023") +
scale_x_continuous(name = "Weeks between R1 and R2", limits = c(0,NA)) +
scale_y_continuous(name = "Cumulative emergence probability by campaign")
# Plot distribution of interval to R2 over time and by geo and by vaccinetype
sias_provinces %>% filter(round_2 == TRUE,
emerge_data == TRUE) %>%
mutate(adm0_group_new = case_when(adm0_name == "NIGERIA" ~ "Nigeria",
adm0_name == "DEMOCRATIC REPUBLIC OF THE CONGO" ~ "DRC",
adm0_group %in% c("Others - AFRO", "CAR", "ETHIOPIA", "Others - non AFRO") ~ "Others")) %>%
group_by(emerge_data_sia) %>%
summarize(emerge_data_sia = unique(emerge_data_sia),
emergence_prob = unique(emergence_prob),
interval = unique(interval),
adm0_group_new = unique(adm0_group_new)) %>%
ggplot(aes(x = interval/7, y = emergence_prob)) +
geom_point(size = 2) +
geom_smooth(method = "lm") +
facet_wrap(adm0_group_new~.) +
ggtitle("Longer R1-to-R2 intervals correlated with higher probability of seeding") +
labs(subtitle = "Sabin-2 campaigns 2016-2019",
caption = "Emergence probability estimates provided by Gray et al 2023") +
scale_x_continuous(name = "Weeks between R1 and R2", limits = c(0,NA)) +
scale_y_continuous(name = "Cumulative emergence probability by campaign")
# Plot distribution of interval to R2 over time and by geo and by vaccinetype
sias_provinces %>% filter(round_2 == TRUE,
emerge_data == TRUE) %>%
mutate(adm0_group_new = case_when(adm0_name == "NIGERIA" ~ "Nigeria",
adm0_name == "DEMOCRATIC REPUBLIC OF THE CONGO" ~ "DRC",
adm0_group %in% c("Others - AFRO", "CAR", "ETHIOPIA", "Others - non AFRO") ~ "Others")) %>%
group_by(emerge_data_sia) %>%
summarize(emerge_data_sia = unique(emerge_data_sia),
emergence_prob = unique(emergence_prob),
interval = unique(interval),
adm0_group_new = unique(adm0_group_new)) %>%
ggplot(aes(x = interval/7, y = emergence_prob)) +
geom_point(size = 2) +
geom_smooth(method = "lm") +
facet_wrap(adm0_group_new~.) +
ggtitle("Longer R1-to-R2 intervals correlated with higher probability of seeding") +
labs(subtitle = "Sabin-2 campaigns 2016-2019",
caption = "Emergence probability estimates provided by Gray et al 2023") +
scale_x_continuous(name = "Weeks between R1 and R2", limits = c(0,NA)) +
scale_y_continuous(name = "Estimated number of emergences by campaign")
ggsave(filename = "C:/Users/coreype/OneDrive - Bill & Melinda Gates Foundation/Documents/GitHub/polio/figures/figure_sabin_emergences_by_interval.png", width = 7, height = 4, units = "in", dpi = 300)
# Calculate cdf before defined dates
daily_U_conv %>%
# filter(periods <= 2023.667) %>%
# filter(periods > 2023.667) %>%
# filter(periods >= 2020, periods < 2021) %>%
# filter(periods >= 2021, periods < 2022) %>%
# filter(periods >= 2022, periods < 2023) %>%
# filter(periods >= 2023, periods < 2024) %>%
# filter(periods >= 2023, periods <= 2023.50) %>%
group_by(source) %>%
summarize(sum(U_mOPV2))
alpha
# testing function
Func_u(1e6, c(.05, .5, .95), alpha = 6.1*10^-6)
Func_u(3e7, c(.05, .5, .95))
# Function to calculate total expected number of emergences using initial value for alpha, just to set things up.
data_province <- data_province %>%
mutate(U_mOPV2 = Func_u(p=population_total_sum,
q = immunity_weighted,
alpha = alpha))
data_national <- data_national %>% mutate(U_mOPV2 = Func_u(p=population_total_sum, q = immunity_weighted, alpha = alpha))
data_province_quarter <- data_province %>% group_by(quarter, source) %>%
summarize(U_mOPV2_sum = sum(U_mOPV2, na.rm=TRUE),
target_pop_sum = sum(target_pop_sum, na.rm=TRUE),
immunity_weighted_summary = weighted.mean(immunity_weighted, population_total_sum, na.rm=TRUE)) %>%
select(quarter, source, U_mOPV2_sum, immunity_weighted_summary, target_pop_sum)
##### note, immunity_weighted_summary is used above. Consider moving up
sias_figure <- left_join(sias_figure, data_province_quarter %>% select("quarter", "source", "U_mOPV2_sum"), by = c("quarter", "source"))
# Assuming poisson distribution of #emergences, calculate total number of expected emergences from probability
data_province %>% group_by(vaccinetype) %>% summarize(pop = sum(target_pop_sum, na.rm=T), U_mOPV2 = sum(U_mOPV2, na.rm=T))
data_province %>% group_by(source) %>% summarize(pop = sum(target_pop_sum, na.rm=T), U_mOPV2 = sum(U_mOPV2, na.rm=T))
# Plot number of doses by vaccine type and number of emergences observed and expected
ggplot(sias_figure, aes(x = quarter, fill = source, color = source)) +
geom_line(aes(y = target_pop_sum), size = 1) +
# scale_color_discrete(labels = c("nOPV2", "Sabin2"), name = "Vaccine Type") +
theme_bw() +
geom_col(aes(y = U_mOPV2_sum*1e6), position = position_dodge2(preserve = "single")) +
geom_point(aes(y = emergences*1e6), color = "black")
# Observed VDPV2 emergences
ggplot(sias_figure, aes(x = quarter)) +
geom_col(aes(y = emergences)) +
ylab("VDPV2 Emergences") +
theme_bw()
# Count post-switch Sabin-2 emergences
viruses %>% filter(source == "Sabin2", index_isolate == "TRUE", seeding_date > "2016-03-01") %>%
filter(region_who_code %in% c("AFRO", "EMRO", "EURO")) %>%
# group_by(year(virus_date)) %>%
summarize(count = n())
sabin_emerge <- 75 # 75 post-switch Sabin-2 emergences in AFRO/EMRO/EURO.
# Tune alpha to match the number of observed Sabin-2 emergences observed.
alpha = 2.15*10^-6 # Updated 8/17
data_province <- data_province %>%
mutate(U_mOPV2 = Func_u(p=population_total_sum,
q = immunity_weighted,
alpha = alpha))
tt_conv_data <- data_province %>%
filter(is.na(U_mOPV2) == F) %>%
# filter(!(adm0_name %in% c("NIGERIA", "DEMOCRATIC REPUBLIC OF THE CONGO"))) %>%
# filter(period < 2021.750) %>%
select(adm0_name, adm1_name, Region, period, vaccinetype, source, U_mOPV2, ES)
periods_mat <- matrix(nrow = nrow(tt_conv_data), ncol = length(periods),  0)
tt_conv_data <- data.frame(tt_conv_data, periods_mat)
names(tt_conv_data) <- c("adm0_name","adm1_name", "region", "period","vaccinetype","source","U_mOPV2", "ES",
periods)
# Output: Estimate U_d_i for each day d and each campaign i for the probability of detecting an emergence on that day from that campaign
for (i in 1:nrow(tt_conv_data)){
start = which(names(tt_conv_data) == round(tt_conv_data[i, "period"],3))
end = start + 59
tt_conv_data[i, start:end] <- Func_tt_conv(U_mOPV2 = tt_conv_data[i, "U_mOPV2"],
adm0_name = tt_conv_data[i, "adm0_name"],
adm1_name = tt_conv_data[i, "adm1_name"],
region = tt_conv_data[i, "region"],
ES = tt_conv_data[i, "ES"],
ttl_include = F)
}
# calculate sum of U_d for each day d across all campaigns i of each vaccine type.
daily_U_conv <- data.frame(periods = rep(periods, each=2))
daily_U_conv$source <- c("Sabin2", "nOPV2")
daily_U_conv$U_mOPV2 <- 0
for (i in 9:ncol(tt_conv_data)){
period = names(tt_conv_data)[i]
U_sabin2_sum <- sum(tt_conv_data[tt_conv_data$source == "Sabin2", i])
U_nOPV2_sum <- sum(tt_conv_data[tt_conv_data$source == "nOPV2", i])
daily_U_conv[daily_U_conv$periods == period & daily_U_conv$source == "Sabin2", "U_mOPV2"] <- U_sabin2_sum
daily_U_conv[daily_U_conv$periods == period & daily_U_conv$source == "nOPV2", "U_mOPV2"] <- U_nOPV2_sum
}
# Plot points and lines for U_d
ggplot() +
geom_vline(xintercept = 2023.5, size = 1) +
geom_vline(xintercept = 2021.25, color = "red", alpha = 0.25, size = 1) +
geom_line(data = daily_U_conv, aes(x = periods, y = U_mOPV2, color = source), size = 1) +
geom_point(data = viruses_count_period %>% filter(emergences > 0), aes(x = period, y = emergences, color = source, shape = source), size = 2) +
theme_bw() +
ylab("Expected cVDPV2 Emergences\n(Assuming Seeding at mOPV2 Rate)") +
xlab("Month") +
# scale_y_continuous(limits = c(0, 8)) +
scale_shape_manual(values = c(19,1)) +
theme(legend.position = c(0.85, 0.8)) +
scale_color_discrete(labels = c("nOPV2", "Sabin2"), name = "Vaccine Type")
# Calculate cdf before defined dates
daily_U_conv %>%
# filter(periods <= 2023.667) %>%
# filter(periods > 2023.667) %>%
# filter(periods >= 2020, periods < 2021) %>%
# filter(periods >= 2021, periods < 2022) %>%
# filter(periods >= 2022, periods < 2023) %>%
# filter(periods >= 2023, periods < 2024) %>%
# filter(periods >= 2023, periods <= 2023.50) %>%
group_by(source) %>%
summarize(sum(U_mOPV2))
unique(daily_U_conv$periods)
# Calculate cdf before defined dates
daily_U_conv %>%
# filter(periods <= 2023.583) %>%
filter(periods <= 2023.667) %>%
# filter(periods > 2023.667) %>%
# filter(periods >= 2020, periods < 2021) %>%
# filter(periods >= 2021, periods < 2022) %>%
# filter(periods >= 2022, periods < 2023) %>%
# filter(periods >= 2023, periods < 2024) %>%
# filter(periods >= 2023, periods <= 2023.50) %>%
group_by(source) %>%
summarize(sum(U_mOPV2))
# Calculate cdf before defined dates
daily_U_conv %>%
filter(periods <= 2023.583) %>%
# filter(periods <= 2023.667) %>%
# filter(periods > 2023.667) %>%
# filter(periods >= 2020, periods < 2021) %>%
# filter(periods >= 2021, periods < 2022) %>%
# filter(periods >= 2022, periods < 2023) %>%
# filter(periods >= 2023, periods < 2024) %>%
# filter(periods >= 2023, periods <= 2023.50) %>%
group_by(source) %>%
summarize(sum(U_mOPV2))
# Calculate cdf before defined dates
daily_U_conv %>%
# filter(periods <= 2023.583) %>%
# filter(periods <= 2023.667) %>%
# filter(periods > 2023.667) %>%
# filter(periods >= 2020, periods < 2021) %>%
# filter(periods >= 2021, periods < 2022) %>%
# filter(periods >= 2022, periods < 2023) %>%
# filter(periods >= 2023, periods < 2024) %>%
# filter(periods >= 2023, periods <= 2023.50) %>%
group_by(source) %>%
summarize(sum(U_mOPV2))
# Calculate cdf before defined dates
daily_U_conv %>%
filter(periods <= 2023.583) %>%
# filter(periods <= 2023.667) %>%
# filter(periods > 2023.667) %>%
# filter(periods >= 2020, periods < 2021) %>%
# filter(periods >= 2021, periods < 2022) %>%
# filter(periods >= 2022, periods < 2023) %>%
# filter(periods >= 2023, periods < 2024) %>%
# filter(periods >= 2023, periods <= 2023.50) %>%
group_by(source) %>%
summarize(sum(U_mOPV2))
head(daily_U_conv)
7/41
#### POLIS Virus data ####
token = readLines("C:/Users/coreype/OneDrive - Bill & Melinda Gates Foundation/Documents/GitHub/polio-immunity-mapping/data_local/token.txt")[1]
viruses_raw = get_polis_virus(token = token, min_date = "2016-05-01", virus_id = 4)
viruses = viruses_raw %>%
select(id, epid, virus_date, surveillance_type_name, region_who_code,
admin0name, country_iso3code, admin1name, admin1guid, admin2name, admin2guid,
virus_type_name, vdpv_classification_name, vdpv_emergence_group_name,
vdpv_nt_changes_from_sabin, surveillance_type_name, po_ns_seq_date) %>%
mutate(virus_date = ymd(virus_date),
id = as.numeric(id),
dot_name = paste(admin0name, admin1name, sep = ":"),
dot_year_month = tolower(paste(year(virus_date), month(virus_date), sep = ":")))
c(viruses$vdpv_emergence_group_name %>% unique())
c(viruses$vdpv_emergence_group_name %>% unique()) %>% sort()
viruses %>% filter(vdpv_emergence_group_name %in% c("EGY-3", "EGY-QEN-1")) %>% View()
viruses %>% filter(admin0name == "EGYPT") %>% View()
View(v)
View(sias_provinces)
View(sias_provinces %>% filter(adm0_name == "EGYPT"))
# Plot distribution of interval to R2 over time and by geo and by vaccinetype
sias_provinces %>% filter(round_2 == TRUE,
start_date > "2016-05-01") %>%
ggplot(aes(x = start_date, y = interval/30.4, color = vaccinetype, shape = vaccinetype)) +
geom_hline(yintercept = 1, color = "darkgray") +
geom_smooth(method = "lm", se = FALSE) +
geom_jitter(size = 2, width = .25, height = .25) +
facet_wrap(adm0_group~.) +
ggtitle("Post-switch Type-2 response inter-campaign intervals") +
xlab("R2 Start Date") +
scale_y_continuous(name = "Months between R1 and R2", breaks = seq(1, 12, 2))
# Plot distribution of interval to R2 over time and by geo and by vaccinetype
sias_provinces %>% filter(round_2 == TRUE,
start_date > "2016-05-01", adm0_name == "EGYPT") %>%
ggplot(aes(x = start_date, y = interval/30.4, color = vaccinetype, shape = vaccinetype)) +
geom_hline(yintercept = 1, color = "darkgray") +
geom_smooth(method = "lm", se = FALSE) +
geom_jitter(size = 2, width = .25, height = .25) +
ggtitle("Post-switch Type-2 response inter-campaign intervals") +
xlab("R2 Start Date") +
scale_y_continuous(name = "Months between R1 and R2", breaks = seq(1, 12, 2))
expand_grid(free = c(0,2),t = c(68, 152)/365) %>%
mutate(lower = qpois(0.025,free + 9*t), upper = qpois(0.975,free + 9*t))
expand_grid(free = c(0,2),t = c(68, 152)/365) %>%
mutate(lower = qpois(0.025,free + 9*t), mid = qpois(0.5, free + 9*t), upper = qpois(0.975,free + 9*t))
5*9/12
11*9/12
5/9/12
5/9*12
expand_grid(free = c(0,2),t = c(8,12, 20)/12) %>%
mutate(lower = qpois(0.025,free + 9*t), mid = qpois(0.5, free + 9*t), upper = qpois(0.975,free + 9*t))
View(sias_provinces %>% filter(adm0_name == "DEMOCRATIC REPUBLIC OF THE CONGO", vaccinetype == "nOPV2"))
View(sias_provinces %>% filter(adm0_name == "DEMOCRATIC REPUBLIC OF THE CONGO"))
View(sias_provinces %>% filter(adm0_name == "DEMOCRATIC REPUBLIC OF THE CONGO", adm1_name == "KWILU"))
